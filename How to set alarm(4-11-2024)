//Need to create two activities
//1 for dialog box and alarm manager and other for broadcast of alarm
//MainActivity.kt
package com.example.alarm

import android.app.AlarmManager
import android.app.PendingIntent
import android.content.Context
import android.content.Intent
import android.os.Bundle
import android.widget.Button
import android.app.TimePickerDialog
import android.widget.Toast
import androidx.appcompat.app.AlertDialog
import androidx.appcompat.app.AppCompatActivity
import java.util.Calendar

class MainActivity : AppCompatActivity() {

    private lateinit var alarmManager: AlarmManager
    private lateinit var pendingIntent: PendingIntent

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val setAlarmButton: Button = findViewById(R.id.setAlarmButton)
        alarmManager = getSystemService(Context.ALARM_SERVICE) as AlarmManager

        setAlarmButton.setOnClickListener {
            showTimePickerDialog()
        }
        val back=findViewById<Button>(R.id.back)
        back.setOnClickListener{
            var b= AlertDialog.Builder(this)
            b.setTitle("Leaving the App")
            b.setMessage("Want to exit ?")
            b.setCancelable(false)
            b.setPositiveButton("yes"){dialog,_ ->finish() }
            b.setNegativeButton("No"){dialog, _ -> dialog.dismiss()}
            b.create().show()
        }
    }

    private fun showTimePickerDialog() {
        val calendar = Calendar.getInstance()
        val hour = calendar.get(Calendar.HOUR_OF_DAY)
        val minute = calendar.get(Calendar.MINUTE)

        TimePickerDialog(this, { _, hourOfDay, minuteOfHour ->
            val setCalendar = Calendar.getInstance()
            setCalendar.set(Calendar.HOUR_OF_DAY, hourOfDay)
            setCalendar.set(Calendar.MINUTE, minuteOfHour)
            setCalendar.set(Calendar.SECOND, 0)

            setAlarm(setCalendar.timeInMillis)
            showConfirmationDialog(hourOfDay, minuteOfHour)
        }, hour, minute, true).show()
    }

    private fun setAlarm(timeInMillis: Long) {
        val intent = Intent(this, AlarmReceiver::class.java)
        pendingIntent = PendingIntent.getBroadcast(this, 0, intent, PendingIntent.FLAG_UPDATE_CURRENT or PendingIntent.FLAG_IMMUTABLE)

        alarmManager.setExact(AlarmManager.RTC_WAKEUP, timeInMillis, pendingIntent)
    }

    private fun showConfirmationDialog(hour: Int, minute: Int) {
        val builder = AlertDialog.Builder(this)
        builder.setTitle("Alarm Set")
        builder.setMessage("Alarm set for ${String.format("%02d:%02d", hour, minute)}")
        builder.setPositiveButton("OK") { dialog, _ -> dialog.dismiss() }
        builder.show()
    }
}

//activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity"
    android:background="@color/black">


    <Button
        android:id="@+id/setAlarmButton"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Set Alarm"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.734" />

    <ImageView
        android:id="@+id/imageView"
        android:layout_width="310dp"
        android:layout_height="385dp"
        android:layout_marginTop="92dp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.495"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:srcCompat="@drawable/alram"
        />

    <Button
        android:id="@+id/back"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Go Back"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.824" />


</androidx.constraintlayout.widget.ConstraintLayout>



//alarmReceiver.kt
package com.example.alarm

import android.content.BroadcastReceiver
import android.content.Context
import android.content.Intent
import android.media.MediaPlayer
import android.media.RingtoneManager
import android.net.Uri

class AlarmReceiver : BroadcastReceiver() {
    override fun onReceive(context: Context, intent: Intent?) {
        val alarmUri: Uri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_ALARM)
            ?: RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION)
        val mediaPlayer = MediaPlayer.create(context, alarmUri)
        mediaPlayer.start()
    }
}

//no xml file is required for alarm receiver activity
